[{"id":"3e25e21f5a4ce997","type":"tab","label":"Battlesnake Starter","disabled":false,"info":""},{"id":"5a07b783dd45bcf6","type":"group","z":"3e25e21f5a4ce997","name":"/get","style":{"label":true,"fill":"#dbcbe7","color":"#6f2fa0"},"nodes":["06b0f0bae6104f48","6679c30ec5613515","8e92a869a40bda82"],"x":454,"y":79,"w":452,"h":82},{"id":"35612bd4b0cabdf9","type":"group","z":"3e25e21f5a4ce997","name":"/start","style":{"label":true,"fill":"#bfdbef","color":"#0070c0"},"nodes":["d7f05099d13f99b8","489f0195741c8ce0","8d83ff74ea508b27"],"x":114,"y":279,"w":472,"h":82},{"id":"531700533f552a41","type":"group","z":"3e25e21f5a4ce997","name":"/move","style":{"label":true,"fill":"#dbcbe7","color":"#6f2fa0"},"nodes":["dc7b55b93aff605c","b9f7e53c67ce750e","6128249c00d9cfe4","b6615de3721662fb","20767a19aede806b"],"x":354,"y":519,"w":692,"h":142},{"id":"fb554658ced2a532","type":"group","z":"3e25e21f5a4ce997","name":"/end","style":{"label":true,"fill":"#bfdbef","color":"#0070c0"},"nodes":["7bec740b8fa1e767","a0482bfbe2a8d9ac","096db284803fc29e"],"x":714,"y":279,"w":472,"h":82},{"id":"6679c30ec5613515","type":"http in","z":"3e25e21f5a4ce997","g":"5a07b783dd45bcf6","name":"","url":"/","method":"get","upload":false,"swaggerDoc":"","x":530,"y":120,"wires":[["06b0f0bae6104f48"]]},{"id":"06b0f0bae6104f48","type":"template","z":"3e25e21f5a4ce997","g":"5a07b783dd45bcf6","name":"my snake","field":"payload","fieldType":"msg","format":"json","syntax":"mustache","template":"{\n \"apiversion\": \"1\",\n \"author\": \"theportablegeek\",\n \"color\": \"#D2B48C\",\n \"head\": \"lantern-fish\",\n \"tail\": \"rbc-necktie\"\n}","output":"json","x":680,"y":120,"wires":[["8e92a869a40bda82"]]},{"id":"8e92a869a40bda82","type":"http response","z":"3e25e21f5a4ce997","g":"5a07b783dd45bcf6","name":"","statusCode":"","headers":{},"x":830,"y":120,"wires":[]},{"id":"7bec740b8fa1e767","type":"http in","z":"3e25e21f5a4ce997","g":"fb554658ced2a532","name":"","url":"/end","method":"post","upload":false,"swaggerDoc":"","x":800,"y":320,"wires":[["a0482bfbe2a8d9ac"]]},{"id":"a0482bfbe2a8d9ac","type":"template","z":"3e25e21f5a4ce997","g":"fb554658ced2a532","name":"","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"ok","output":"str","x":960,"y":320,"wires":[["096db284803fc29e"]]},{"id":"096db284803fc29e","type":"http response","z":"3e25e21f5a4ce997","g":"fb554658ced2a532","name":"","statusCode":"","headers":{},"x":1110,"y":320,"wires":[]},{"id":"489f0195741c8ce0","type":"http in","z":"3e25e21f5a4ce997","g":"35612bd4b0cabdf9","name":"","url":"/start","method":"post","upload":false,"swaggerDoc":"","x":210,"y":320,"wires":[["d7f05099d13f99b8"]]},{"id":"d7f05099d13f99b8","type":"template","z":"3e25e21f5a4ce997","g":"35612bd4b0cabdf9","name":"","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"ok","output":"str","x":360,"y":320,"wires":[["8d83ff74ea508b27"]]},{"id":"8d83ff74ea508b27","type":"http response","z":"3e25e21f5a4ce997","g":"35612bd4b0cabdf9","name":"","statusCode":"","headers":{},"x":510,"y":320,"wires":[]},{"id":"dc7b55b93aff605c","type":"http in","z":"3e25e21f5a4ce997","g":"531700533f552a41","name":"","url":"/move","method":"post","upload":false,"swaggerDoc":"","x":450,"y":560,"wires":[["b9f7e53c67ce750e","20767a19aede806b"]]},{"id":"b9f7e53c67ce750e","type":"debug","z":"3e25e21f5a4ce997","g":"531700533f552a41","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":690,"y":620,"wires":[]},{"id":"6128249c00d9cfe4","type":"debug","z":"3e25e21f5a4ce997","g":"531700533f552a41","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":950,"y":620,"wires":[]},{"id":"b6615de3721662fb","type":"http response","z":"3e25e21f5a4ce997","g":"531700533f552a41","name":"","statusCode":"","headers":{},"x":950,"y":560,"wires":[]},{"id":"2da83728b10541f9","type":"comment","z":"3e25e21f5a4ce997","name":"An empty GET request made to the top-level URL of your Battlesnake.","info":"Used for customization, checking latency, and verifying successful communications between the Battlesnake and the Battlesnake Engine","x":670,"y":40,"wires":[]},{"id":"4ccd90404ff2bebc","type":"comment","z":"3e25e21f5a4ce997","name":"Use this data to determine how your Battlesnake will move on that turn, either up, down, left, or right.","info":"","x":700,"y":480,"wires":[]},{"id":"77c1832b1ca3fd89","type":"comment","z":"3e25e21f5a4ce997","name":" Every game has a unique ID that can be used to allocated resources you may need.","info":" 1","x":350,"y":400,"wires":[]},{"id":"20767a19aede806b","type":"function","z":"3e25e21f5a4ce997","g":"531700533f552a41","name":"Snake Brain","func":"  // Define Possible Moves\n  let isMoveSafe = {\n    up: true,\n    down: true,\n    left: true,\n    right: true\n  };\n  \n   // Avoid Running into Neck\n\n  const myHead = msg.req.body.you.body[0];\n  const myNeck = msg.req.body.you.body[1];\n\n  if (myNeck.x < myHead.x) {        // Neck is left of head, don't move left\n    isMoveSafe.left = false;\n\n  } else if (myNeck.x > myHead.x) { // Neck is right of head, don't move right\n    isMoveSafe.right = false;\n\n  } else if (myNeck.y < myHead.y) { // Neck is below head, don't move down\n    isMoveSafe.down = false;\n\n  } else if (myNeck.y > myHead.y) { // Neck is above head, don't move up\n    isMoveSafe.up = false;\n  }\n\n// Avoid walls\n  const boardWidth = msg.req.body.board.width\n  const boardHeight = msg.req.body.board.height\n\n    if(myHead.y < 1) {\n      isMoveSafe.down = false;\n    }\n    if(myHead.y >= boardHeight - 1) {\n      isMoveSafe.up = false;\n    }\n    if(myHead.x < 1) {\n      isMoveSafe.left = false;\n    }\n    if(myHead.x >= boardWidth - 1) {\n      isMoveSafe.right = false;\n    }\n    \n    \n    // Avoid Body past neck\n    for (let i = 2; i < msg.req.body.you.length; i++) {\n      let checkBody = msg.req.body.you.body[i];\n      checkCollision(myHead, checkBody);\n    }\n    \n    // Avoid Other Snakes\n    const otherSnakes = msg.req.body.board.snakes;\n    const myID = msg.req.body.you.id;\n    for (let i = 0; i < otherSnakes.length; i++) {\n      // Review to see if I remove this if statement, does it check for myself as well (i.e. remove step 2)\n      if (otherSnakes[i].id != myID) {        \n        for (let j = 0; j < otherSnakes[i].body.length; j++) {\n            // Need to avoid other snake's heads / next move in case of collision\n          // if (j == 0) {\n          //   [myHead.x, myHead.y]\n\n          let otherBody = otherSnakes[i].body[j];\n          checkCollision(myHead, otherBody);\n        }\n      }\n    }\n\n// Find Closest Food\n    const closestFood = findClosestFood(myHead, msg.req.body.board);\n    const xDist = closestFood.x - myHead.x;\n    const yDist = closestFood.y - myHead.y;\n    const xPreference = xDist > 0 ? 'right' : 'left';\n    const yPreference = yDist > 0 ? 'up' : 'down';\n    const firstPreference = Math.abs(xDist) > Math.abs(yDist) ? xPreference : yPreference;\n    const secondPreference = firstPreference === xPreference ? yPreference : xPreference;\n\nfunction checkCollision(self, other) {\n    if (self.x === other.x) {\n      if (self.y === other.y - 1) {\n        isMoveSafe.up = false;\n      }\n      if (self.y === other.y + 1) {\n        isMoveSafe.down = false;\n      }\n    }\n\n    if (self.y === other.y) {\n      if (self.x === other.x - 1) {\n        isMoveSafe.right = false;\n      }\n      if (self.x === other.x + 1) {\n        isMoveSafe.left = false;\n      }\n    }\n}\n\nfunction findClosestFood(head, board) {\n  if (board.food.length === 0) {\n    return {x: 0, y: 0};\n  }\n  let closestFood = null;\n  let result = {};\n  msg.req.body.board.food.forEach(food => {\n    const distance = Math.sqrt(Math.pow(head.x-food.x, 2) + Math.pow(head.y-food.y, 2));\n    if (closestFood === null || distance < closestFood) {\n      closestFood = distance;\n      result = food;\n    }\n  });\n  return result;\n}\n\n// Choose Next Move\n \n \n    const safeMoves = Object.keys(isMoveSafe).filter(key => isMoveSafe[key]);\n   \n    let nextMove;\n    \n    if (safeMoves.includes(firstPreference) && msg.req.body.you.health < 50) {\n      nextMove = firstPreference;\n    } else if (safeMoves.includes(secondPreference) && msg.req.body.you.health < 50) {\n      nextMove = secondPreference;\n    } else if (safeMoves.length == 0)  {\n              nextMove = 'down';\n\n    } else {\n      nextMove = safeMoves[Math.floor(Math.random() * safeMoves.length)];\n\n    }\n  \nmsg.payload.move = nextMove\n\n  return msg\n  \n  \n      \n\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":690,"y":560,"wires":[["b6615de3721662fb","6128249c00d9cfe4"]]},{"id":"04fab37ba986fa5b","type":"comment","z":"3e25e21f5a4ce997","name":" Use it to learn how your Battlesnake won or lost and deallocate any server-side resources. ","info":" Every game has a unique ID that can be used to allocated resources or data you may need.","x":970,"y":400,"wires":[]},{"id":"9115252562c1793e","type":"comment","z":"3e25e21f5a4ce997","name":"Your Battlesnake will receive this request for each game but your response to this request will be ignored.","info":"","x":680,"y":240,"wires":[]}]
